version: '3'
services:
    nginx:
        build:
            context: ${CURRENT}${NGINX}
            args:
                APP_ENV: ${APP_ENV}
                APP_VIRTUAL: ${APP_VIRTUAL}
                NGINX_CONF_TEMPLATE: ${NGINX_CONF_TEMPLATE}
                NGINX_CONF_TEMPLATE_VIRTUAL: ${NGINX_CONF_TEMPLATE_VIRTUAL}
                SSL: ${SSL}
        container_name: nginx
        depends_on:
            - php-fpm
        environment:
            - APP_VIRTUAL=${APP_VIRTUAL}
            - NGINX_CONF_TEMPLATE=${NGINX_CONF_TEMPLATE}
            - NGINX_CONF_TEMPLATE_VIRTUAL=${NGINX_CONF_TEMPLATE_VIRTUAL}
            - SERVER_DOMAIN=${SERVER_DOMAIN}
            - SSL=${SSL}
        restart: always
        ports:
            - 80:80
            - 443:443
        volumes:
            - ${CURRENT}${APP}:${APP_VIRTUAL}:cached
            - ${CURRENT}${APP}/var
            - ${CURRENT}${APP}/vendor
            - ${CURRENT}/nginx/sites/:/etc/nginx/sites-available
            - ${CURRENT}/nginx/logs:/var/log/nginx
        networks:
            - web

    php-fpm:
        build:
            context: ${CURRENT}${APP}
            args:
                APP: ${APP}
                APP_VIRTUAL: ${APP_VIRTUAL}
        container_name: php-fpm
        depends_on:
            - mysql
        environment:
            - APP=${APP}
            - APP_VIRTUAL=${APP_VIRTUAL}
            - APP_ENV=${APP_ENV}
            - APP_SECRET=${APP_SECRET}
            - OWNER=${OWNER}
            - OWNER_EMAIL=${OWNER_EMAIL}
            - DATABASE_URL=mysql://root:${DATABASE_ROOT_PASSWORD}@mysql:3306/${DATABASE_NAME}?serverVersion=8.0
            - MAILER_URL=${MAILER_URL}
            - MAILER_DSN=${MAILER_DSN}
            - RECAPTCHA_SECRET=${RECAPTCHA_SECRET}

        volumes:
            - ${CURRENT}${APP}:${APP_VIRTUAL}:cached
            - ${CURRENT}${APP}/var
            - ${CURRENT}${APP}/vendor
            - ${CURRENT}${APP}/php.ini:/usr/local/etc/php/php.ini
        networks:
            - web

    mysql:
        build:
            context: ${CURRENT}${DATABASE}
        container_name: mysql
        command: mysqld --sql_mode='' 
                 --default-authentication-plugin=mysql_native_password
        environment:
            - MYSQL_DATABASE=${DATABASE_NAME}
            - MYSQL_USER=${DATABASE_USER}
            - MYSQL_PASSWORD=${DATABASE_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
        ports:
            - 3306:3306
        restart: always
        networks:
            - web
        volumes:
#           - ${CURRENT}${DATABASE}/init.sql:/docker-entrypoint-initdb.d/
            - ${CURRENT}${DATABASE_DATA}:${DATABASE_DATA_VIRTUAL}

networks:
    web:
